volatile unsigned char *myTCCR1A = (unsigned char *) 0x80;
volatile unsigned char *myTCCR1B = (unsigned char *) 0x81;
volatile unsigned char *myTCCR1C = (unsigned char *) 0x82;
volatile unsigned char *myTIMSK1 = (unsigned char *) 0x6F;
volatile unsigned int *myTCNT1 = (unsigned int *) 0x84;
volatile unsigned char *myTIFR1 = (unsigned char *) 0x36;
volatile unsigned char *portDDRB = (unsigned char *) 0x24;
volatile unsigned char *portB = (unsigned char *) 0x25; 

volatile unsigned char* port_b = (unsigned char*) 0x25;
volatile unsigned char* ddr_b = (unsigned char*) 0x24;
volatile unsigned char* pin_b = (unsigned char*) 0x23;


int freq = 0;
int playing = 0;


void setup() {
  *ddr_b |= 0x40;
  Serial.begin(9600);


}


void loop() {
  if(Serial.available())
  {
    unsigned char in_char = Serial.read();
    Serial.write(in_char);




    switch(in_char){
      case 'A':
        freq = 440;
        playing = 1;
        break;
      case 'B':
        freq = 494;
        playing = 1;
        break;
      case 'C':
        freq = 523;
        playing = 1;
        break;
      case 'D':
        freq = 587;
        playing = 1;
        break;
      case 'E':
        freq = 659;
        playing = 1;
        break;
      case 'F':
        freq = 698;
        playing = 1;
        break;
      case 'G':
        freq = 784;
        playing = 1;
        break;
      case 'Q':
        playing = 0;
        break;
    }
  }
  if (playing) {
    *port_b |= 0x40;
    my_delay(freq);
    *port_b &= 0xBF;
    my_delay(freq);
  }
  else {
    *port_b &= 0xBF;
  }
}


void my_delay(unsigned int freq)
{
  //calc period
  double period = 1.0/double(freq);
  // 50% duty cycle
  double half_period = period/ 2.0f;
  // clock period def
  double clk_period = 0.0000000625;
  // calc ticks
  unsigned int ticks = half_period / clk_period;
  // stop the timer
  *myTCCR1B &= 0xF8;
  // set the counts
  *myTCNT1 = (unsigned int) (65536 - ticks);
  // start the timer
  * myTCCR1A = 0x0;
  * myTCCR1B = 0xb00000001;
  // wait for overflow
  while((*myTIFR1 & 0x01) ==0); // 0b 0000 0000
  // stop the timer
  *myTCCR1B &= 0xF8; // 0b 0000 0000
  // reset TOV
  *myTIFR1 |= 0x01;
}
